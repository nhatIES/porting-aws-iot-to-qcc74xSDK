# avoid 'Entering|Leaving directory' messages
ifndef VERBOSE
MAKEFLAGS += --no-print-directory
endif

command_flash = $(QCC74x_FLASH_PROGRAM) --interface=uart --baudrate=$(BAUDRATE) \
	--port=$(COMX) --cpu_id=$(CPU_ID) --config=flash_prog_cfg.ini
command_efuse = $(QCC74x_FLASH_PROGRAM) --interface=uart --baudrate=$(BAUDRATE) \
	--port=$(COMX) --efuse=build/build_out/efusedata.bin
command_puncover = $(PUNCOVER_PROGRAM) \
	--elf_file ./build/build_out/*.elf --map_file ./build/build_out/*.map \
	--build_dir ./build --src_root ${QCC74x_SDK_BASE} --port 5001

ifeq ($(OS),Windows_NT)
CMAKE = $(QCC74x_SDK_BASE)/tools/cmake/bin/cmake.exe
QCC74x_FLASH_PROGRAM = ${QCC74x_SDK_BASE}/tools/qcc74x_tools/QConn_Flash/QConn_Flash_Cmd.exe
PUNCOVER_PROGRAM = puncover_riscv.exe
cmake_generator = "MinGW Makefiles"

else
	ifeq ($(shell uname),Darwin)
	CMAKE = cmake # use user cmake
	QCC74x_FLASH_PROGRAM = ${QCC74x_SDK_BASE}/tools/qcc74x_tools/QConn_Flash/QConn_Flash_Cmd-macos
	PUNCOVER_PROGRAM = puncover_riscv
	cmake_generator = "Unix Makefiles"
	else ifeq ($(shell uname),FreeBSD)
	CMAKE = cmake # use user cmake
	QCC74x_FLASH_PROGRAM = ${QCC74x_SDK_BASE}/tools/qcc74x_tools/QConn_Flash/QConn_Flash_Cmd-freebsd
	PUNCOVER_PROGRAM = puncover_riscv
	cmake_generator = "Unix Makefiles"
	else ifeq ($(shell arch),aarch64)
	CMAKE = cmake # use user cmake
	QCC74x_FLASH_PROGRAM = ${QCC74x_SDK_BASE}/tools/qcc74x_tools/QConn_Flash/QConn_Flash_Cmd-arm
	PUNCOVER_PROGRAM = puncover_riscv
	cmake_generator = "Unix Makefiles"
	else ifeq ($(patsubst %WSL2,WSL2,$(shell uname -r)), WSL2)
	PS_PROGRAM = /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe
	CMAKE = $(QCC74x_SDK_BASE)/tools/cmake/bin/cmake
	command_flash = $(PS_PROGRAM) make flash CHIP=$(CHIP) CPU_ID=$(CPU_ID) COMX=$(COMX) BAUDRATE=$(BAUDRATE)
	command_efuse = $(PS_PROGRAM) make efuse CHIP=$(CHIP) CPU_ID=$(CPU_ID) COMX=$(COMX) BAUDRATE=$(BAUDRATE)
	PUNCOVER_PROGRAM = puncover_riscv
	cmake_generator = "Unix Makefiles"
	else
	CMAKE = $(QCC74x_SDK_BASE)/tools/cmake/bin/cmake
	QCC74x_FLASH_PROGRAM = ${QCC74x_SDK_BASE}/tools/qcc74x_tools/QConn_Flash/QConn_Flash_Cmd-ubuntu
	PUNCOVER_PROGRAM = puncover_riscv
	cmake_generator = "Unix Makefiles"
	endif
endif

# The command to remove a file.
RM = $(CMAKE) -E remove_directory

CPU_ID ?=
CONFIG_USB_HS ?=y
CONFIG_ROMAPI ?=y
CONFIG_DEBUG ?=y
CONFIG_TLSF ?=y
CONFIG_COREDUMP ?=y
CONFIG_ANTI_ROLLBACK ?= n
CONFIG_APP_ANTI_ROLLBACK_VER ?= 0
COMX ?=COM5
BAUDRATE ?=2000000
BOARD_DIR ?=

#cmake definition config
cmake_definition+= -DCROSS_COMPILE=${CROSS_COMPILE}
cmake_definition+= -DCHIP=$(CHIP)
cmake_definition+= -DCPU_ID=$(CPU_ID)
cmake_definition+= -DBOARD=$(BOARD)
cmake_definition+= -DBOARD_DIR=$(BOARD_DIR)
cmake_definition+= -DCONFIG_DEBUG=$(CONFIG_DEBUG)
cmake_definition+= -DCONFIG_ROMAPI=$(CONFIG_ROMAPI)
cmake_definition+= -DCONFIG_USB_HS=$(CONFIG_USB_HS)
cmake_definition+= -DCONFIG_COMX=$(COMX)
cmake_definition+= -DCMAKE_EXPORT_COMPILE_COMMANDS=OFF
cmake_definition+= -DCONFIG_TLSF=$(CONFIG_TLSF)
cmake_definition+= -DCONFIG_COREDUMP=$(CONFIG_COREDUMP)
cmake_definition+= -DCONFIG_ANTI_ROLLBACK=$(CONFIG_ANTI_ROLLBACK)
cmake_definition+= -DCONFIG_APP_ANTI_ROLLBACK_VER=$(CONFIG_APP_ANTI_ROLLBACK_VER)

build:Makefile
	$(CMAKE) -S . -B build -G $(cmake_generator) $(cmake_definition)
	$(MAKE) -C build pre_build
	$(MAKE) -C build -j8
	$(MAKE) -C build combine
	$(MAKE) -C build post_build

ninja:Makefile
	$(CMAKE) -S . -B build -G Ninja $(cmake_definition)
	cd build && ninja pre_build && ninja && ninja combine && ninja post_build

clean::
	$(RM) build

# Pack built outs and clean
pack_clean::
	proj_name=`find . -name "*.elf" | xargs basename -s .elf`; \
	tar czvf $${proj_name}_imgs.tar.gz build/build_out/$${proj_name}.*;
	$(RM) build

menuconfig::
	python $(QCC74x_SDK_BASE)/tools/kconfig/menuconfig.py

flash:
	$(command_flash)

efuse:
	$(command_efuse)

puncover:
	$(command_puncover)

size:
	$(MAKE) -C build size_report

.PHONY:build clean menuconfig ninja flash efuse puncover size
